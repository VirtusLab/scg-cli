{
  "projectName": "spring-boot",
  "workspace": "data/spring-boot.zip",
  "stats": [
    {
      "id": "loc",
      "description": "Lines of code",
      "nodes": [
        {
          "id": "org.springframework.boot.maven.MavenBuild.execute(org.springframework.boot.maven.MavenBuild.ProjectCallback, int)",
          "label": "execute",
          "score": 73
        },
        {
          "id": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration.FlywayConfiguration.configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayProperties)",
          "label": "configureProperties",
          "score": 68
        },
        {
          "id": "org.springframework.boot.convert.PeriodStyle?SIMPLE",
          "label": "SIMPLE",
          "score": 60
        },
        {
          "id": "org.springframework.boot.cli.command.init.ProjectGenerationRequest.generateUrl(org.springframework.boot.cli.command.init.InitializrServiceMetadata)",
          "label": "generateUrl",
          "score": 57
        },
        {
          "id": "org.springframework.boot.build.bom.bomr.UpgradeBom.upgradeDependencies()",
          "label": "upgradeDependencies",
          "score": 55
        },
        {
          "id": "org.springframework.boot.configurationprocessor.json.JSONTokener.readLiteral()",
          "label": "readLiteral",
          "score": 55
        },
        {
          "id": "org.springframework.boot.configurationprocessor.json.JSONTokener.nextCleanInternal()",
          "label": "nextCleanInternal",
          "score": 52
        },
        {
          "id": "org.springframework.boot.cli.command.init.InitCommand.InitOptionHandler.createProjectGenerationRequest(joptsimple.OptionSet)",
          "label": "createProjectGenerationRequest",
          "score": 52
        },
        {
          "id": "org.springframework.boot.loader.util.SystemPropertyUtils.parseStringValue(java.util.Properties, java.lang.String, java.lang.String, java.util.Set<java.lang.String>)",
          "label": "parseStringValue",
          "score": 51
        },
        {
          "id": "org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchOutcome(org.springframework.context.annotation.ConditionContext, org.springframework.core.type.AnnotatedTypeMetadata)",
          "label": "getMatchOutcome",
          "score": 51
        }
      ]
    },
    {
      "id": "out-degree",
      "description": "Node out-degree",
      "nodes": [
        {
          "id": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration.FlywayConfiguration.configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayProperties)",
          "label": "configureProperties",
          "score": 233
        },
        {
          "id": "org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.customize(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory)",
          "label": "customize",
          "score": 116
        },
        {
          "id": "org.springframework.boot.autoconfigure.amqp.RabbitConnectionFactoryBeanConfigurer.configure(org.springframework.amqp.rabbit.connection.RabbitConnectionFactoryBean)",
          "label": "configure",
          "score": 108
        },
        {
          "id": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer.customize(org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory)",
          "label": "customize",
          "score": 92
        },
        {
          "id": "org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchOutcome(org.springframework.context.annotation.ConditionContext, org.springframework.core.type.AnnotatedTypeMetadata)",
          "label": "getMatchOutcome",
          "score": 90
        },
        {
          "id": "org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.customizeAccessLog(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory)",
          "label": "customizeAccessLog",
          "score": 88
        },
        {
          "id": "org.springframework.boot.buildpack.platform.build.Lifecycle.createPhase()",
          "label": "createPhase",
          "score": 77
        },
        {
          "id": "org.springframework.boot.build.bom.bomr.UpgradeBom.upgradeDependencies()",
          "label": "upgradeDependencies",
          "score": 75
        },
        {
          "id": "org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer.configureContainer(org.springframework.kafka.listener.ContainerProperties)",
          "label": "configureContainer",
          "score": 63
        },
        {
          "id": "org.springframework.boot.SpringApplication.run(java.lang.String...)",
          "label": "run",
          "score": 63
        }
      ]
    },
    {
      "id": "in-degree",
      "description": "Node in-degree",
      "nodes": [
        {
          "id": "org.springframework.boot.context.properties.PropertyMapper.from(java.util.function.Supplier<T>)",
          "label": "from",
          "score": 329
        },
        {
          "id": "org.springframework.boot.context.properties.PropertyMapper.Source.to(java.util.function.Consumer<T>)",
          "label": "to",
          "score": 236
        },
        {
          "id": "org.springframework.boot.context.properties.PropertyMapper.from(T)",
          "label": "from",
          "score": 182
        },
        {
          "id": "org.springframework.boot.context.properties.PropertyMapper.get()",
          "label": "get",
          "score": 162
        },
        {
          "id": "org.springframework.boot.context.properties.PropertyMapper.alwaysApplyingWhenNonNull()",
          "label": "alwaysApplyingWhenNonNull",
          "score": 117
        },
        {
          "id": "org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PropertiesConfigAdapter.get(java.util.function.Function<T, V>, java.util.function.Supplier<V>)",
          "label": "get",
          "score": 115
        },
        {
          "id": "org.springframework.boot.maven.MavenBuild.project(java.lang.String)",
          "label": "project",
          "score": 99
        },
        {
          "id": "org.springframework.boot.test.json.JsonContentAssert?loader@55.26:55.32",
          "label": "loader",
          "score": 94
        },
        {
          "id": "org.springframework.boot.maven.MavenBuild.execute(org.springframework.boot.maven.MavenBuild.ProjectCallback)",
          "label": "execute",
          "score": 85
        },
        {
          "id": "org.springframework.boot.SpringApplication.run(java.lang.Class<?>, java.lang.String...)",
          "label": "run",
          "score": 84
        }
      ]
    },
    {
      "id": "pagerank",
      "description": "PageRank",
      "nodes": [
        {
          "id": "org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PropertiesConfigAdapter?properties@33.17:33.27",
          "label": "properties",
          "score": 0.001221946320479624
        },
        {
          "id": "org.springframework.boot.context.properties.PropertyMapper.PropertyMapper(org.springframework.boot.context.properties.PropertyMapper, org.springframework.boot.context.properties.PropertyMapper.SourceOperator)",
          "label": "PropertyMapper",
          "score": 0.0012085091147618701
        },
        {
          "id": "org.springframework.boot.SpringApplication.run(java.lang.Class<?>[], java.lang.String[])",
          "label": "run",
          "score": 0.0011393757096111185
        },
        {
          "id": "org.springframework.boot.SpringApplication.run(java.lang.Class<?>, java.lang.String...)",
          "label": "run",
          "score": 0.0011240520765649353
        },
        {
          "id": "org.springframework.boot.configurationprocessor.json.JSONObject?nameValuePairs@107.35:107.49",
          "label": "nameValuePairs",
          "score": 9.294370831720001E-4
        },
        {
          "id": "org.springframework.boot.context.properties.PropertyMapper?INSTANCE@62.37:62.45",
          "label": "INSTANCE",
          "score": 9.271273724620798E-4
        },
        {
          "id": "org.springframework.boot.context.properties.PropertyMapper.get()",
          "label": "get",
          "score": 9.230109703509613E-4
        },
        {
          "id": "org.springframework.boot.configurationprocessor.json.JSONArray?values@48.28:48.34",
          "label": "values",
          "score": 8.874675995212935E-4
        },
        {
          "id": "org.springframework.boot.launchscript.AbstractLaunchScriptIntegrationTests.doTest(java.lang.String, java.lang.String, java.lang.String)",
          "label": "doTest",
          "score": 8.227306143694181E-4
        },
        {
          "id": "org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PropertiesConfigAdapter.get(java.util.function.Function<T, V>, java.util.function.Supplier<V>)",
          "label": "get",
          "score": 7.812681746569354E-4
        }
      ]
    },
    {
      "id": "eigenvector",
      "description": "Eigenvector centrality",
      "nodes": [
        {
          "id": "org.springframework.boot.configurationprocessor.json.JSONTokener?pos@70.13:70.16",
          "label": "pos",
          "score": 0.7938526084074168
        },
        {
          "id": "org.springframework.boot.configurationprocessor.json.JSONTokener?in@64.22:64.24",
          "label": "in",
          "score": 0.5277934529293657
        },
        {
          "id": "org.springframework.boot.configurationprocessor.json.JSONTokener.nextCleanInternal()?c@114.7:114.8",
          "label": "c",
          "score": 0.1346298832397915
        },
        {
          "id": "org.springframework.boot.configurationprocessor.json.JSONTokener.syntaxError(java.lang.String)",
          "label": "syntaxError",
          "score": 0.11813963067167971
        },
        {
          "id": "org.springframework.boot.configurationprocessor.json.JSONTokener.readLiteral()?literal@279.9:279.16",
          "label": "literal",
          "score": 0.08994949142825973
        },
        {
          "id": "org.springframework.boot.configurationprocessor.json.JSONTokener.nextCleanInternal()",
          "label": "nextCleanInternal",
          "score": 0.0792734880386527
        },
        {
          "id": "org.springframework.boot.configurationprocessor.json.JSONTokener.readLiteral()?number@297.10:297.16",
          "label": "number",
          "score": 0.07672536013640495
        },
        {
          "id": "org.springframework.boot.configurationprocessor.json.JSONTokener.nextCleanInternal()?commentEnd@132.11:132.21",
          "label": "commentEnd",
          "score": 0.06731494161989575
        },
        {
          "id": "org.springframework.boot.configurationprocessor.json.JSONTokener.skipToEndOfLine()",
          "label": "skipToEndOfLine",
          "score": 0.06731494161989575
        },
        {
          "id": "org.springframework.boot.configurationprocessor.json.JSONTokener.nextToInternal(java.lang.String)?c@344.8:344.9",
          "label": "c",
          "score": 0.05777854384715255
        }
      ]
    },
    {
      "id": "Katz",
      "description": "Katz centrality",
      "nodes": [
        {
          "id": "org.springframework.boot.context.properties.PropertyMapper.from(java.util.function.Supplier<T>)",
          "label": "from",
          "score": 4.336151829999998
        },
        {
          "id": "org.springframework.boot.context.properties.PropertyMapper.Source.to(java.util.function.Consumer<T>)",
          "label": "to",
          "score": 3.379642270000002
        },
        {
          "id": "org.springframework.boot.context.properties.PropertyMapper.from(T)",
          "label": "from",
          "score": 2.8331050600000003
        },
        {
          "id": "org.springframework.boot.context.properties.PropertyMapper.get()",
          "label": "get",
          "score": 2.67810167
        },
        {
          "id": "org.springframework.boot.context.properties.PropertyMapper.alwaysApplyingWhenNonNull()",
          "label": "alwaysApplyingWhenNonNull",
          "score": 2.2114197700000005
        },
        {
          "id": "org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PropertiesConfigAdapter.get(java.util.function.Function<T, V>, java.util.function.Supplier<V>)",
          "label": "get",
          "score": 2.1501010000000007
        },
        {
          "id": "org.springframework.boot.maven.MavenBuild.project(java.lang.String)",
          "label": "project",
          "score": 1.9908040000000007
        },
        {
          "id": "org.springframework.boot.test.json.JsonContentAssert?loader@55.26:55.32",
          "label": "loader",
          "score": 1.9456090000000004
        },
        {
          "id": "org.springframework.boot.maven.MavenBuild.execute(org.springframework.boot.maven.MavenBuild.ProjectCallback)",
          "label": "execute",
          "score": 1.8508040000000006
        },
        {
          "id": "org.springframework.boot.SpringApplication.run(java.lang.Class<?>, java.lang.String...)",
          "label": "run",
          "score": 1.8400000000000005
        }
      ]
    },
    {
      "id": "betweenness",
      "description": "Betweenness centrality",
      "nodes": [
        {
          "id": "org.springframework.boot.SpringApplication.run(java.lang.String...)",
          "label": "run",
          "score": 30140.600000000006
        },
        {
          "id": "org.springframework.boot.SpringApplication.run(java.lang.Class<?>[], java.lang.String[])",
          "label": "run",
          "score": 20984
        },
        {
          "id": "org.springframework.boot.SpringApplication.run(java.lang.Class<?>, java.lang.String...)",
          "label": "run",
          "score": 20580
        },
        {
          "id": "org.springframework.boot.context.properties.bind.Binder.bind(java.lang.String, org.springframework.boot.context.properties.bind.Bindable<T>)",
          "label": "bind",
          "score": 12864
        },
        {
          "id": "org.springframework.boot.context.properties.bind.Binder.bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName, org.springframework.boot.context.properties.bind.Bindable<T>, org.springframework.boot.context.properties.bind.BindHandler, boolean)",
          "label": "bind",
          "score": 12748.549999999996
        },
        {
          "id": "org.springframework.boot.context.properties.bind.Binder.bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName, org.springframework.boot.context.properties.bind.Bindable<T>, org.springframework.boot.context.properties.bind.BindHandler, org.springframework.boot.context.properties.bind.Binder.Context, boolean, boolean)",
          "label": "bind",
          "score": 12604.549999999996
        },
        {
          "id": "org.springframework.boot.context.properties.bind.Binder.bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName, org.springframework.boot.context.properties.bind.Bindable<T>, org.springframework.boot.context.properties.bind.BindHandler)",
          "label": "bind",
          "score": 11729.549999999996
        },
        {
          "id": "org.springframework.boot.context.properties.source.ConfigurationPropertyName.elementsOf(java.lang.CharSequence, boolean, int)",
          "label": "elementsOf",
          "score": 11156.450000000004
        },
        {
          "id": "org.springframework.boot.context.properties.source.ConfigurationPropertyName.of(java.lang.CharSequence, boolean)",
          "label": "of",
          "score": 10313.450000000003
        },
        {
          "id": "org.springframework.boot.context.properties.source.ConfigurationPropertyName.elementsOf(java.lang.CharSequence, boolean)",
          "label": "elementsOf",
          "score": 9470.450000000003
        }
      ]
    },
    {
      "id": "harmonic",
      "description": "Harmonic centrality",
      "nodes": [
        {
          "id": "org.springframework.boot.maven.BuildImageMojo.buildImage()",
          "label": "buildImage",
          "score": 0.006108451112363643
        },
        {
          "id": "org.springframework.boot.buildpack.platform.build.Builder.build(org.springframework.boot.buildpack.platform.build.BuildRequest)",
          "label": "build",
          "score": 0.00571579606502363
        },
        {
          "id": "org.springframework.boot.maven.BuildImageMojo.execute()",
          "label": "execute",
          "score": 0.004785283613913437
        },
        {
          "id": "org.springframework.boot.gradle.tasks.bundling.BootBuildImage.buildImage()",
          "label": "buildImage",
          "score": 0.004629931931401012
        },
        {
          "id": "org.springframework.boot.context.config.ConfigDataEnvironment.processAndApply()",
          "label": "processAndApply",
          "score": 0.0035747159018059698
        },
        {
          "id": "org.springframework.boot.configurationprocessor.ConfigurationMetadataAnnotationProcessor.process(java.util.Set<? extends javax.lang.model.element.TypeElement>, javax.annotation.processing.RoundEnvironment)",
          "label": "process",
          "score": 0.0032257826286754055
        },
        {
          "id": "org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.customize(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory)",
          "label": "customize",
          "score": 0.003099757673667204
        },
        {
          "id": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor.postProcessEnvironment(org.springframework.core.env.ConfigurableEnvironment, org.springframework.core.io.ResourceLoader, java.util.Collection<java.lang.String>)",
          "label": "postProcessEnvironment",
          "score": 0.0030453063697207547
        },
        {
          "id": "org.springframework.boot.context.config.ConfigDataEnvironmentContributors.withProcessedImports(org.springframework.boot.context.config.ConfigDataImporter, org.springframework.boot.context.config.ConfigDataActivationContext)",
          "label": "withProcessedImports",
          "score": 0.002978726546855586
        },
        {
          "id": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration.FlywayConfiguration.configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayProperties)",
          "label": "configureProperties",
          "score": 0.002852382875605814
        }
      ]
    },
    {
      "id": "combined",
      "description": "Combined importance",
      "nodes": [
        {
          "id": "org.springframework.boot.SpringApplication.run(java.lang.Class<?>, java.lang.String...)",
          "label": "run",
          "score": 4
        },
        {
          "id": "org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PropertiesConfigAdapter.get(java.util.function.Function<T, V>, java.util.function.Supplier<V>)",
          "label": "get",
          "score": 3
        },
        {
          "id": "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration.FlywayConfiguration.configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayProperties)",
          "label": "configureProperties",
          "score": 3
        },
        {
          "id": "org.springframework.boot.context.properties.PropertyMapper.get()",
          "label": "get",
          "score": 3
        },
        {
          "id": "org.springframework.boot.context.properties.PropertyMapper.Source.to(java.util.function.Consumer<T>)",
          "label": "to",
          "score": 2
        },
        {
          "id": "org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.customize(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory)",
          "label": "customize",
          "score": 2
        },
        {
          "id": "org.springframework.boot.context.properties.PropertyMapper.alwaysApplyingWhenNonNull()",
          "label": "alwaysApplyingWhenNonNull",
          "score": 2
        },
        {
          "id": "org.springframework.boot.test.json.JsonContentAssert?loader@55.26:55.32",
          "label": "loader",
          "score": 2
        },
        {
          "id": "org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchOutcome(org.springframework.context.annotation.ConditionContext, org.springframework.core.type.AnnotatedTypeMetadata)",
          "label": "getMatchOutcome",
          "score": 2
        },
        {
          "id": "org.springframework.boot.maven.MavenBuild.project(java.lang.String)",
          "label": "project",
          "score": 2
        }
      ]
    }
  ]
}