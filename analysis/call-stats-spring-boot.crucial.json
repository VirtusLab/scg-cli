{
  "projectName" : "spring-boot",
  "workspace" : "data/spring-boot",
  "stats" : [
    {
      "id" : "loc",
      "description" : "Top by node LOC size",
      "nodes" : [
        {
          "id" : "org.springframework.boot.maven.MavenBuild.execute(org.springframework.boot.maven.MavenBuild.ProjectCallback, int)",
          "label" : "execute",
          "score" : 73.0
        },
        {
          "id" : "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration.FlywayConfiguration.configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayProperties)",
          "label" : "configureProperties",
          "score" : 68.0
        },
        {
          "id" : "org.springframework.boot.cli.command.init.ProjectGenerationRequest.generateUrl(org.springframework.boot.cli.command.init.InitializrServiceMetadata)",
          "label" : "generateUrl",
          "score" : 57.0
        },
        {
          "id" : "org.springframework.boot.configurationprocessor.json.JSONTokener.readLiteral()",
          "label" : "readLiteral",
          "score" : 55.0
        },
        {
          "id" : "org.springframework.boot.build.bom.bomr.UpgradeBom.upgradeDependencies()",
          "label" : "upgradeDependencies",
          "score" : 55.0
        },
        {
          "id" : "org.springframework.boot.cli.command.init.InitCommand.InitOptionHandler.createProjectGenerationRequest(joptsimple.OptionSet)",
          "label" : "createProjectGenerationRequest",
          "score" : 52.0
        },
        {
          "id" : "org.springframework.boot.configurationprocessor.json.JSONTokener.nextCleanInternal()",
          "label" : "nextCleanInternal",
          "score" : 52.0
        },
        {
          "id" : "MavenWrapperDownloader.main(String[])",
          "label" : "main",
          "score" : 51.0
        },
        {
          "id" : "org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchOutcome(org.springframework.context.annotation.ConditionContext, org.springframework.core.type.AnnotatedTypeMetadata)",
          "label" : "getMatchOutcome",
          "score" : 51.0
        },
        {
          "id" : "org.springframework.boot.loader.util.SystemPropertyUtils.parseStringValue(java.util.Properties, java.lang.String, java.lang.String, java.util.Set<java.lang.String>)",
          "label" : "parseStringValue",
          "score" : 51.0
        }
      ]
    },
    {
      "id" : "out-degree",
      "description" : "Top by node degree outgoing",
      "nodes" : [
        {
          "id" : "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration.FlywayConfiguration.configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayProperties)",
          "label" : "configureProperties",
          "score" : 63.0
        },
        {
          "id" : "org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.customize(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory)",
          "label" : "customize",
          "score" : 41.0
        },
        {
          "id" : "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer.customize(org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory)",
          "label" : "customize",
          "score" : 34.0
        },
        {
          "id" : "org.springframework.boot.buildpack.platform.build.Builder.build(org.springframework.boot.buildpack.platform.build.BuildRequest)",
          "label" : "build",
          "score" : 30.0
        },
        {
          "id" : "org.springframework.boot.autoconfigure.amqp.RabbitConnectionFactoryBeanConfigurer.configure(org.springframework.amqp.rabbit.connection.RabbitConnectionFactoryBean)",
          "label" : "configure",
          "score" : 28.0
        },
        {
          "id" : "org.springframework.boot.autoconfigure.web.embedded.UndertowWebServerFactoryCustomizer.mapUndertowProperties(org.springframework.boot.web.embedded.undertow.ConfigurableUndertowWebServerFactory, org.springframework.boot.autoconfigure.web.embedded.UndertowWebServerFactoryCustomizer.ServerOptions)",
          "label" : "mapUndertowProperties",
          "score" : 25.0
        },
        {
          "id" : "org.springframework.boot.build.bom.bomr.UpgradeBom.upgradeDependencies()",
          "label" : "upgradeDependencies",
          "score" : 23.0
        },
        {
          "id" : "org.springframework.boot.autoconfigure.web.embedded.JettyWebServerFactoryCustomizer.customize(org.springframework.boot.web.embedded.jetty.ConfigurableJettyWebServerFactory)",
          "label" : "customize",
          "score" : 23.0
        },
        {
          "id" : "org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.customizeAccessLog(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory)",
          "label" : "customizeAccessLog",
          "score" : 22.0
        },
        {
          "id" : "org.springframework.boot.autoconfigure.security.saml2.Saml2RelyingPartyRegistrationConfiguration.asRegistration(java.lang.String, org.springframework.boot.autoconfigure.security.saml2.Saml2RelyingPartyProperties.Registration)",
          "label" : "asRegistration",
          "score" : 21.0
        }
      ]
    },
    {
      "id" : "in-degree",
      "description" : "Top by node degree incoming",
      "nodes" : [
        {
          "id" : "org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PropertiesConfigAdapter.get(java.util.function.Function<T, V>, java.util.function.Supplier<V>)",
          "label" : "get",
          "score" : 115.0
        },
        {
          "id" : "org.springframework.boot.maven.MavenBuild.project(java.lang.String)",
          "label" : "project",
          "score" : 99.0
        },
        {
          "id" : "org.springframework.boot.maven.MavenBuild.execute(org.springframework.boot.maven.MavenBuild.ProjectCallback)",
          "label" : "execute",
          "score" : 85.0
        },
        {
          "id" : "org.springframework.boot.SpringApplication.run(java.lang.Class<?>, java.lang.String...)",
          "label" : "run",
          "score" : 84.0
        },
        {
          "id" : "org.springframework.boot.context.properties.PropertyMapper.get()",
          "label" : "get",
          "score" : 80.0
        },
        {
          "id" : "org.springframework.boot.context.properties.PropertyMapper.from(java.util.function.Supplier<T>)",
          "label" : "from",
          "score" : 62.0
        },
        {
          "id" : "org.springframework.boot.maven.MavenBuild.goals(java.lang.String...)",
          "label" : "goals",
          "score" : 61.0
        },
        {
          "id" : "org.springframework.boot.context.properties.PropertyMapper.alwaysApplyingWhenNonNull()",
          "label" : "alwaysApplyingWhenNonNull",
          "score" : 58.0
        },
        {
          "id" : "org.springframework.boot.context.properties.PropertyMapper.Source.to(java.util.function.Consumer<T>)",
          "label" : "to",
          "score" : 48.0
        },
        {
          "id" : "org.springframework.boot.autoconfigure.condition.ConditionOutcome.noMatch(org.springframework.boot.autoconfigure.condition.ConditionMessage)",
          "label" : "noMatch",
          "score" : 46.0
        }
      ]
    },
    {
      "id" : "pagerank",
      "description" : "PageRank - how influential the node is",
      "nodes" : [
        {
          "id" : "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor.flatten(java.lang.String, java.util.Map<java.lang.String, java.lang.Object>, java.util.Map<java.lang.String, java.lang.Object>)",
          "label" : "flatten",
          "score" : 0.005739360670339097
        },
        {
          "id" : "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor.extract(java.lang.String, java.util.Map<java.lang.String, java.lang.Object>, java.lang.Object)",
          "label" : "extract",
          "score" : 0.005717475807449678
        },
        {
          "id" : "org.springframework.boot.SpringApplication.run(java.lang.String...)",
          "label" : "run",
          "score" : 0.003411470516337212
        },
        {
          "id" : "org.springframework.boot.SpringApplication.run(java.lang.Class<?>[], java.lang.String[])",
          "label" : "run",
          "score" : 0.003055335771196444
        },
        {
          "id" : "org.springframework.boot.SpringApplication.run(java.lang.Class<?>, java.lang.String...)",
          "label" : "run",
          "score" : 0.0030142017549442657
        },
        {
          "id" : "org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PropertiesConfigAdapter.get(java.util.function.Function<T, V>, java.util.function.Supplier<V>)",
          "label" : "get",
          "score" : 0.0020805011729757472
        },
        {
          "id" : "org.springframework.boot.context.properties.source.ConfigurationPropertyName.Elements.getSize()",
          "label" : "getSize",
          "score" : 0.001242345313188664
        },
        {
          "id" : "org.springframework.boot.context.properties.PropertyMapper.from(java.util.function.Supplier<T>)",
          "label" : "from",
          "score" : 0.001215686311607796
        },
        {
          "id" : "org.springframework.boot.launchscript.AbstractLaunchScriptIntegrationTests.doTest(java.lang.String, java.lang.String, java.lang.String)",
          "label" : "doTest",
          "score" : 0.0011946682186241308
        },
        {
          "id" : "org.springframework.boot.maven.MavenBuild.project(java.lang.String)",
          "label" : "project",
          "score" : 9.657336231423708E-4
        }
      ]
    },
    {
      "id" : "eigenvector",
      "description" : "eigenvector Centrality",
      "nodes" : [
        {
          "id" : "org.springframework.boot.configurationprocessor.json.JSONStringer.peek()",
          "label" : "peek",
          "score" : 0.35882001179240436
        },
        {
          "id" : "org.springframework.boot.configurationprocessor.json.JSONStringer.newline()",
          "label" : "newline",
          "score" : 0.35882001179240436
        },
        {
          "id" : "org.springframework.boot.configurationprocessor.json.JSONTokener.syntaxError(java.lang.String)",
          "label" : "syntaxError",
          "score" : 0.3318566583051139
        },
        {
          "id" : "org.springframework.boot.configurationprocessor.json.JSONStringer.beforeValue()",
          "label" : "beforeValue",
          "score" : 0.2696335348729051
        },
        {
          "id" : "org.springframework.boot.configurationprocessor.json.JSONStringer.replaceTop(org.springframework.boot.configurationprocessor.json.JSONStringer.Scope)",
          "label" : "replaceTop",
          "score" : 0.24681838961442848
        },
        {
          "id" : "org.springframework.boot.configurationprocessor.json.JSONStringer.string(java.lang.String)",
          "label" : "string",
          "score" : 0.23644786904239382
        },
        {
          "id" : "org.springframework.boot.configurationprocessor.json.JSONStringer.value(java.lang.Object)",
          "label" : "value",
          "score" : 0.22400324435595184
        },
        {
          "id" : "org.springframework.boot.json.BasicJsonParser.trimTrailingCharacter(java.lang.String, char)",
          "label" : "trimTrailingCharacter",
          "score" : 0.1991139949830683
        },
        {
          "id" : "org.springframework.boot.json.BasicJsonParser.trimLeadingCharacter(java.lang.String, char)",
          "label" : "trimLeadingCharacter",
          "score" : 0.1991139949830683
        },
        {
          "id" : "org.springframework.boot.configurationprocessor.json.JSONObject.writeTo(org.springframework.boot.configurationprocessor.json.JSONStringer)",
          "label" : "writeTo",
          "score" : 0.15763191269492918
        }
      ]
    },
    {
      "id" : "Katz",
      "description" : "Katz Centrality - how influential the node is",
      "nodes" : [
        {
          "id" : "org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PropertiesConfigAdapter.get(java.util.function.Function<T, V>, java.util.function.Supplier<V>)",
          "label" : "get",
          "score" : 2.150000000000001
        },
        {
          "id" : "org.springframework.boot.maven.MavenBuild.project(java.lang.String)",
          "label" : "project",
          "score" : 1.9902000000000006
        },
        {
          "id" : "org.springframework.boot.maven.MavenBuild.execute(org.springframework.boot.maven.MavenBuild.ProjectCallback)",
          "label" : "execute",
          "score" : 1.8502000000000005
        },
        {
          "id" : "org.springframework.boot.SpringApplication.run(java.lang.Class<?>, java.lang.String...)",
          "label" : "run",
          "score" : 1.8400000000000005
        },
        {
          "id" : "org.springframework.boot.context.properties.PropertyMapper.get()",
          "label" : "get",
          "score" : 1.8053432900000002
        },
        {
          "id" : "org.springframework.boot.context.properties.PropertyMapper.from(java.util.function.Supplier<T>)",
          "label" : "from",
          "score" : 1.6284151900000001
        },
        {
          "id" : "org.springframework.boot.maven.MavenBuild.goals(java.lang.String...)",
          "label" : "goals",
          "score" : 1.6100000000000003
        },
        {
          "id" : "org.springframework.boot.context.properties.PropertyMapper.alwaysApplyingWhenNonNull()",
          "label" : "alwaysApplyingWhenNonNull",
          "score" : 1.58313725
        },
        {
          "id" : "org.springframework.boot.context.properties.PropertyMapper.Source.to(java.util.function.Consumer<T>)",
          "label" : "to",
          "score" : 1.4825120200000002
        },
        {
          "id" : "org.springframework.boot.autoconfigure.condition.ConditionOutcome.noMatch(org.springframework.boot.autoconfigure.condition.ConditionMessage)",
          "label" : "noMatch",
          "score" : 1.46140503
        }
      ]
    },
    {
      "id" : "betweenness",
      "description" : "Betweenness Centrality",
      "nodes" : [
        {
          "id" : "org.springframework.boot.SpringApplication.run(java.lang.String...)",
          "label" : "run",
          "score" : 3.7360118925745873E-5
        },
        {
          "id" : "org.springframework.boot.SpringApplication.run(java.lang.Class<?>[], java.lang.String[])",
          "label" : "run",
          "score" : 2.6433672254787284E-5
        },
        {
          "id" : "org.springframework.boot.SpringApplication.run(java.lang.Class<?>, java.lang.String...)",
          "label" : "run",
          "score" : 2.6096558655138834E-5
        },
        {
          "id" : "org.springframework.boot.context.properties.bind.Binder.bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName, org.springframework.boot.context.properties.bind.Bindable<T>, org.springframework.boot.context.properties.bind.BindHandler, boolean)",
          "label" : "bind",
          "score" : 1.265828516327023E-5
        },
        {
          "id" : "org.springframework.boot.context.properties.bind.Binder.bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName, org.springframework.boot.context.properties.bind.Bindable<T>, org.springframework.boot.context.properties.bind.BindHandler, org.springframework.boot.context.properties.bind.Binder.Context, boolean, boolean)",
          "label" : "bind",
          "score" : 1.2612014669200835E-5
        },
        {
          "id" : "org.springframework.boot.context.properties.bind.Binder.bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName, org.springframework.boot.context.properties.bind.Bindable<T>, org.springframework.boot.context.properties.bind.BindHandler)",
          "label" : "bind",
          "score" : 1.1893169493479876E-5
        },
        {
          "id" : "org.springframework.boot.context.properties.bind.Binder.bind(java.lang.String, org.springframework.boot.context.properties.bind.Bindable<T>)",
          "label" : "bind",
          "score" : 9.449095896028613E-6
        },
        {
          "id" : "org.springframework.boot.SpringApplication.prepareEnvironment(org.springframework.boot.SpringApplicationRunListeners, org.springframework.boot.DefaultBootstrapContext, org.springframework.boot.ApplicationArguments)",
          "label" : "prepareEnvironment",
          "score" : 9.016136272950702E-6
        },
        {
          "id" : "org.springframework.boot.SpringApplication.handleRunFailure(org.springframework.context.ConfigurableApplicationContext, java.lang.Throwable, org.springframework.boot.SpringApplicationRunListeners)",
          "label" : "handleRunFailure",
          "score" : 9.016136272950702E-6
        },
        {
          "id" : "org.springframework.boot.context.properties.bind.Binder.bindObject(org.springframework.boot.context.properties.source.ConfigurationPropertyName, org.springframework.boot.context.properties.bind.Bindable<T>, org.springframework.boot.context.properties.bind.BindHandler, org.springframework.boot.context.properties.bind.Binder.Context, boolean)",
          "label" : "bindObject",
          "score" : 8.64266728510487E-6
        }
      ]
    },
    {
      "id" : "harmonic",
      "description" : "Top harmonic centrality",
      "nodes" : [
        {
          "id" : "org.springframework.boot.buildpack.platform.build.Builder.build(org.springframework.boot.buildpack.platform.build.BuildRequest)",
          "label" : "build",
          "score" : 0.004571100069806598
        },
        {
          "id" : "org.springframework.boot.maven.BuildImageMojo.buildImage()",
          "label" : "buildImage",
          "score" : 0.004411617094859408
        },
        {
          "id" : "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration.FlywayConfiguration.configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayProperties)",
          "label" : "configureProperties",
          "score" : 0.0039139599501772536
        },
        {
          "id" : "org.springframework.boot.gradle.tasks.bundling.BootBuildImage.buildImage()",
          "label" : "buildImage",
          "score" : 0.0036087728183157946
        },
        {
          "id" : "org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.customize(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory)",
          "label" : "customize",
          "score" : 0.0034578901983328544
        },
        {
          "id" : "org.springframework.boot.maven.BuildImageMojo.execute()",
          "label" : "execute",
          "score" : 0.003349028410827783
        },
        {
          "id" : "org.springframework.boot.configurationprocessor.ConfigurationMetadataAnnotationProcessor.process(java.util.Set<? extends javax.lang.model.element.TypeElement>, javax.annotation.processing.RoundEnvironment)",
          "label" : "process",
          "score" : 0.002906465799538522
        },
        {
          "id" : "org.springframework.boot.context.config.ConfigDataEnvironment.processAndApply()",
          "label" : "processAndApply",
          "score" : 0.0028756666986043287
        },
        {
          "id" : "org.springframework.boot.SpringApplication.run(java.lang.String...)",
          "label" : "run",
          "score" : 0.00253767502977046
        },
        {
          "id" : "org.springframework.boot.test.context.SpringBootContextLoader.loadContext(org.springframework.test.context.MergedContextConfiguration, org.springframework.boot.test.context.SpringBootContextLoader.Mode, org.springframework.context.ApplicationContextInitializer<org.springframework.context.ConfigurableApplicationContext>)",
          "label" : "loadContext",
          "score" : 0.0025300784297622465
        }
      ]
    },
    {
      "id" : "combined",
      "description" : "Crucial code elements, combined",
      "nodes" : [
        {
          "id" : "org.springframework.boot.SpringApplication.run(java.lang.Class<?>, java.lang.String...)",
          "label" : "run",
          "score" : 4.0
        },
        {
          "id" : "org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PropertiesConfigAdapter.get(java.util.function.Function<T, V>, java.util.function.Supplier<V>)",
          "label" : "get",
          "score" : 3.0
        },
        {
          "id" : "org.springframework.boot.maven.MavenBuild.project(java.lang.String)",
          "label" : "project",
          "score" : 3.0
        },
        {
          "id" : "org.springframework.boot.SpringApplication.run(java.lang.String...)",
          "label" : "run",
          "score" : 3.0
        },
        {
          "id" : "org.springframework.boot.context.properties.PropertyMapper.from(java.util.function.Supplier<T>)",
          "label" : "from",
          "score" : 3.0
        },
        {
          "id" : "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration.FlywayConfiguration.configureProperties(org.flywaydb.core.api.configuration.FluentConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayProperties)",
          "label" : "configureProperties",
          "score" : 3.0
        },
        {
          "id" : "org.springframework.boot.context.properties.PropertyMapper.Source.to(java.util.function.Consumer<T>)",
          "label" : "to",
          "score" : 2.0
        },
        {
          "id" : "org.springframework.boot.context.properties.PropertyMapper.alwaysApplyingWhenNonNull()",
          "label" : "alwaysApplyingWhenNonNull",
          "score" : 2.0
        },
        {
          "id" : "org.springframework.boot.buildpack.platform.build.Builder.build(org.springframework.boot.buildpack.platform.build.BuildRequest)",
          "label" : "build",
          "score" : 2.0
        },
        {
          "id" : "org.springframework.boot.maven.MavenBuild.execute(org.springframework.boot.maven.MavenBuild.ProjectCallback)",
          "label" : "execute",
          "score" : 2.0
        },
        {
          "id" : "org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.customize(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory)",
          "label" : "customize",
          "score" : 2.0
        },
        {
          "id" : "org.springframework.boot.SpringApplication.run(java.lang.Class<?>[], java.lang.String[])",
          "label" : "run",
          "score" : 2.0
        },
        {
          "id" : "org.springframework.boot.autoconfigure.condition.ConditionOutcome.noMatch(org.springframework.boot.autoconfigure.condition.ConditionMessage)",
          "label" : "noMatch",
          "score" : 2.0
        },
        {
          "id" : "org.springframework.boot.build.bom.bomr.UpgradeBom.upgradeDependencies()",
          "label" : "upgradeDependencies",
          "score" : 2.0
        },
        {
          "id" : "org.springframework.boot.maven.MavenBuild.goals(java.lang.String...)",
          "label" : "goals",
          "score" : 2.0
        },
        {
          "id" : "org.springframework.boot.context.properties.PropertyMapper.get()",
          "label" : "get",
          "score" : 2.0
        },
        {
          "id" : "org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer.customizeAccessLog(org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory)",
          "label" : "customizeAccessLog",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.configurationprocessor.json.JSONStringer.replaceTop(org.springframework.boot.configurationprocessor.json.JSONStringer.Scope)",
          "label" : "replaceTop",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.configurationprocessor.json.JSONTokener.nextCleanInternal()",
          "label" : "nextCleanInternal",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer.customize(org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory)",
          "label" : "customize",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.maven.MavenBuild.execute(org.springframework.boot.maven.MavenBuild.ProjectCallback, int)",
          "label" : "execute",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.loader.util.SystemPropertyUtils.parseStringValue(java.util.Properties, java.lang.String, java.lang.String, java.util.Set<java.lang.String>)",
          "label" : "parseStringValue",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.cli.command.init.ProjectGenerationRequest.generateUrl(org.springframework.boot.cli.command.init.InitializrServiceMetadata)",
          "label" : "generateUrl",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.cli.command.init.InitCommand.InitOptionHandler.createProjectGenerationRequest(joptsimple.OptionSet)",
          "label" : "createProjectGenerationRequest",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.json.BasicJsonParser.trimTrailingCharacter(java.lang.String, char)",
          "label" : "trimTrailingCharacter",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.context.properties.bind.Binder.bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName, org.springframework.boot.context.properties.bind.Bindable<T>, org.springframework.boot.context.properties.bind.BindHandler)",
          "label" : "bind",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchOutcome(org.springframework.context.annotation.ConditionContext, org.springframework.core.type.AnnotatedTypeMetadata)",
          "label" : "getMatchOutcome",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor.extract(java.lang.String, java.util.Map<java.lang.String, java.lang.Object>, java.lang.Object)",
          "label" : "extract",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.maven.BuildImageMojo.buildImage()",
          "label" : "buildImage",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.context.properties.bind.Binder.bind(java.lang.String, org.springframework.boot.context.properties.bind.Bindable<T>)",
          "label" : "bind",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.configurationprocessor.json.JSONObject.writeTo(org.springframework.boot.configurationprocessor.json.JSONStringer)",
          "label" : "writeTo",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.gradle.tasks.bundling.BootBuildImage.buildImage()",
          "label" : "buildImage",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.autoconfigure.security.saml2.Saml2RelyingPartyRegistrationConfiguration.asRegistration(java.lang.String, org.springframework.boot.autoconfigure.security.saml2.Saml2RelyingPartyProperties.Registration)",
          "label" : "asRegistration",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.context.properties.bind.Binder.bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName, org.springframework.boot.context.properties.bind.Bindable<T>, org.springframework.boot.context.properties.bind.BindHandler, org.springframework.boot.context.properties.bind.Binder.Context, boolean, boolean)",
          "label" : "bind",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.context.properties.source.ConfigurationPropertyName.Elements.getSize()",
          "label" : "getSize",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.test.context.SpringBootContextLoader.loadContext(org.springframework.test.context.MergedContextConfiguration, org.springframework.boot.test.context.SpringBootContextLoader.Mode, org.springframework.context.ApplicationContextInitializer<org.springframework.context.ConfigurableApplicationContext>)",
          "label" : "loadContext",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.SpringApplication.prepareEnvironment(org.springframework.boot.SpringApplicationRunListeners, org.springframework.boot.DefaultBootstrapContext, org.springframework.boot.ApplicationArguments)",
          "label" : "prepareEnvironment",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor.flatten(java.lang.String, java.util.Map<java.lang.String, java.lang.Object>, java.util.Map<java.lang.String, java.lang.Object>)",
          "label" : "flatten",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.configurationprocessor.ConfigurationMetadataAnnotationProcessor.process(java.util.Set<? extends javax.lang.model.element.TypeElement>, javax.annotation.processing.RoundEnvironment)",
          "label" : "process",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.autoconfigure.amqp.RabbitConnectionFactoryBeanConfigurer.configure(org.springframework.amqp.rabbit.connection.RabbitConnectionFactoryBean)",
          "label" : "configure",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.configurationprocessor.json.JSONStringer.beforeValue()",
          "label" : "beforeValue",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.SpringApplication.handleRunFailure(org.springframework.context.ConfigurableApplicationContext, java.lang.Throwable, org.springframework.boot.SpringApplicationRunListeners)",
          "label" : "handleRunFailure",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.autoconfigure.web.embedded.UndertowWebServerFactoryCustomizer.mapUndertowProperties(org.springframework.boot.web.embedded.undertow.ConfigurableUndertowWebServerFactory, org.springframework.boot.autoconfigure.web.embedded.UndertowWebServerFactoryCustomizer.ServerOptions)",
          "label" : "mapUndertowProperties",
          "score" : 1.0
        },
        {
          "id" : "MavenWrapperDownloader.main(String[])",
          "label" : "main",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.configurationprocessor.json.JSONTokener.syntaxError(java.lang.String)",
          "label" : "syntaxError",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.json.BasicJsonParser.trimLeadingCharacter(java.lang.String, char)",
          "label" : "trimLeadingCharacter",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.autoconfigure.web.embedded.JettyWebServerFactoryCustomizer.customize(org.springframework.boot.web.embedded.jetty.ConfigurableJettyWebServerFactory)",
          "label" : "customize",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.launchscript.AbstractLaunchScriptIntegrationTests.doTest(java.lang.String, java.lang.String, java.lang.String)",
          "label" : "doTest",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.configurationprocessor.json.JSONStringer.peek()",
          "label" : "peek",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.configurationprocessor.json.JSONStringer.newline()",
          "label" : "newline",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.context.config.ConfigDataEnvironment.processAndApply()",
          "label" : "processAndApply",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.context.properties.bind.Binder.bindObject(org.springframework.boot.context.properties.source.ConfigurationPropertyName, org.springframework.boot.context.properties.bind.Bindable<T>, org.springframework.boot.context.properties.bind.BindHandler, org.springframework.boot.context.properties.bind.Binder.Context, boolean)",
          "label" : "bindObject",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.configurationprocessor.json.JSONTokener.readLiteral()",
          "label" : "readLiteral",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.configurationprocessor.json.JSONStringer.string(java.lang.String)",
          "label" : "string",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.maven.BuildImageMojo.execute()",
          "label" : "execute",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.context.properties.bind.Binder.bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName, org.springframework.boot.context.properties.bind.Bindable<T>, org.springframework.boot.context.properties.bind.BindHandler, boolean)",
          "label" : "bind",
          "score" : 1.0
        },
        {
          "id" : "org.springframework.boot.configurationprocessor.json.JSONStringer.value(java.lang.Object)",
          "label" : "value",
          "score" : 1.0
        }
      ]
    }
  ],
  "graphStats" : [
    {
      "id" : "average_node_degree",
      "label" : "Average Graph Degree",
      "score" : 2.530468414267297
    },
    {
      "id" : "clustering_coefficient",
      "label" : "Average Clustering Coefficient",
      "score" : 0.02044186883572609
    }
  ]
}